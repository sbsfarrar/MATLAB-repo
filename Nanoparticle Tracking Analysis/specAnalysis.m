specs = struct; 
%specs.Appearance = "Colorless, clear liquid; no visible particulates";
%specs.pH = [7, 8];
%specs.Osmo = [200, 400];
specs.NTAconc = [1.8E+11, 2.0E+12];
specs.NTAmean = [110, 157];
specs.NTAmode = [108, 143];
%specs.NTAd10 = [86, 155];
%specs.NTAd50 = [111, 146];
%specs.NTAd90 = [133, 207];
specs.Potency = [4.62E-16, 2.10E-15]; 
specs.dsDNA = 1.77; 
specs.Protein = 1.66; 
specs.Endo = 30; 

% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\StevenSummey\Documents\MATLAB\Nanoparticle Tracking Analysis\AB126 Trending.xlsx
%    Worksheet: AB126 Trending
%
% Auto-generated by MATLAB on 24-Aug-2023 14:19:12

% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 21);

% Specify sheet and range
opts.Sheet = "AB126 Trending";
opts.DataRange = "A2:U100";

% Specify column names and types
opts.VariableNames = ["DS3Lot", "ManufactureDate", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "ParticlesmL", "MeanParticleSize", "ModeParticleSize", "Var13", "Var14", "AMPaseActivityuMolparticlemin", "dsDNAugmL", "TotalProteinmgmL", "Var18", "Var19", "Var20", "EndotoxinEUmL"];
opts.SelectedVariableNames = ["DS3Lot", "ManufactureDate", "ParticlesmL", "MeanParticleSize", "ModeParticleSize", "AMPaseActivityuMolparticlemin", "dsDNAugmL", "TotalProteinmgmL", "EndotoxinEUmL"];
opts.VariableTypes = ["string", "datetime", "char", "char", "char", "char", "char", "char", "char", "double", "double", "double", "char", "char", "double", "double", "double", "char", "char", "char", "double"];

% Specify variable properties
opts = setvaropts(opts, ["DS3Lot", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var13", "Var14", "Var18", "Var19", "Var20"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["DS3Lot", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var13", "Var14", "Var18", "Var19", "Var20"], "EmptyFieldRule", "auto");

% Import the data
AB126Trending = readtable("C:\Users\StevenSummey\Documents\MATLAB\Nanoparticle Tracking Analysis\AB126 Trending.xlsx", opts, "UseExcel", false);


% Clear temporary variables
clear opts
%%
specsResults_Struct = struct; 
specsResults = zeros((size(AB126Trending,1)),1); 

specsNames = string(fieldnames(specs));
AB126Trending_Lots = string(AB126Trending.DS3Lot);
specsResults_Struct.LotNumber = AB126Trending_Lots;


%%% separate by year
YEAR = year(AB126Trending.ManufactureDate);
% months = string(month(AB126Trending.ManufactureDate, "shortname"));
% ManufactureClip = months + "-" + years; 
% ManufactureClip = datetime(ManufactureClip,'InputFormat','MMM-yyyy');
AB126Trending = addvars(AB126Trending,YEAR,'After',"ManufactureDate");
% AB126Trending.ManufactureDate = year(AB126Trending.ManufactureDate); 
specsResults_Struct.ManufactureDate = AB126Trending.ManufactureDate; 

AB126Trending_Names =  string(AB126Trending.Properties.VariableNames(4:end))';
years = unique(AB126Trending.YEAR);
specsResults_Struct.YEAR = AB126Trending.YEAR; 
specsResults_Struct.Overall = ones(size(AB126Trending,1),1); 
for i = 1:numel(specsNames)
    specsResults = zeros((size(AB126Trending,1)),1);
    for j = 1:(size(AB126Trending,1))
        if isnan(AB126Trending.(AB126Trending_Names(i))(j))
            specsResults(j) = NaN; 
        elseif numel(specs.(specsNames(i))) > 1
            if AB126Trending.(AB126Trending_Names(i))(j) > specs.(specsNames(i))(1) && ...
                  AB126Trending.(AB126Trending_Names(i))(j) < specs.(specsNames(i))(2)  
                specsResults(j) = 1; 
            else
                specsResults(j) = 0;
                specsResults_Struct.Overall(j,1) = 0; 
            end
        else
            if AB126Trending.(AB126Trending_Names(i))(j) <= specs.(specsNames(i))
                specsResults(j) = 1;
            else
                specsResults(j) = 0;
                specsResults_Struct.Overall(j,1) = 0;
            end
        end
    end
    specsResults_Struct.(specsNames(i)) = specsResults; 
end

A = struct2table(specsResults_Struct);
specsRatios = zeros(1,numel(specsNames));
%%
for k = 1:numel(years)
    B = A(A.YEAR == years(k),:);
    xvar = string(B.(1));
    yvar = B.Properties.VariableNames(4:end);
    cvar = B{:,4:end}; 
    figure; 
    h = heatmap(cvar,Colormap =sky(2));
    h.YDisplayLabels = xvar; 
    h.XDisplayLabels = yvar; 
    axs = struct(gca); %ignore warning that this should be avoided
    cb = axs.Colorbar;
    cb.Ticks = [0, 1];
    cb.TickLabels = {'FAIL','PASS'};
    %count NaN values as 1
    C = B{:,yvar}; 
    C(isnan(C)) = 1; 
    B{:,yvar} = C; 
    for l = 1:numel(yvar)
        specsRatios(l,k) = sum(B.(yvar{l}))/numel(B.(yvar{l})) * 100;
    end
end
%%
X = categorical(yvar);
X = reordercats(X,yvar);
g = bar(X,transpose(specsRatios));
for i = 1: numel(years)
    xtips1 = g(i).XEndPoints;
    ytips1 = g(i).YEndPoints;
    labels1 = string(years(i));
    text(xtips1,ytips1,labels1,'HorizontalAlignment','center',...
        'VerticalAlignment','bottom')
end
